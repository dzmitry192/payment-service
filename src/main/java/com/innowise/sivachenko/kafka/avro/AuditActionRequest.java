/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.innowise.sivachenko.kafka.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AuditActionRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8479876107352459198L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AuditActionRequest\",\"namespace\":\"com.innowise.sivachenko.kafka.avro\",\"fields\":[{\"name\":\"email\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"@Email\"},{\"name\":\"info\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"@NotBlank\"},{\"name\":\"actionType\",\"type\":{\"type\":\"enum\",\"name\":\"AuditActionType\",\"symbols\":[\"GET\",\"POST\",\"PATCH\",\"PUT\",\"DELETE\"]},\"doc\":\"@NotBlank\"},{\"name\":\"serviceType\",\"type\":{\"type\":\"enum\",\"name\":\"AuditServiceType\",\"symbols\":[\"CLIENT\",\"CAR\",\"RENT\",\"PAYMENT\",\"NOTIFICATION\",\"AUDIT\"]},\"doc\":\"@NotBlank\"},{\"name\":\"actionStatus\",\"type\":\"int\",\"doc\":\"@NotNull\"},{\"name\":\"actionTime\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"@NotNull\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<AuditActionRequest> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AuditActionRequest> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AuditActionRequest> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AuditActionRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AuditActionRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AuditActionRequest to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AuditActionRequest from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AuditActionRequest instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AuditActionRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** @Email */
  private java.lang.String email;
  /** @NotBlank */
  private java.lang.String info;
  /** @NotBlank */
  private com.innowise.sivachenko.kafka.avro.AuditActionType actionType;
  /** @NotBlank */
  private com.innowise.sivachenko.kafka.avro.AuditServiceType serviceType;
  /** @NotNull */
  private int actionStatus;
  /** @NotNull */
  private java.time.Instant actionTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AuditActionRequest() {}

  /**
   * All-args constructor.
   * @param email @Email
   * @param info @NotBlank
   * @param actionType @NotBlank
   * @param serviceType @NotBlank
   * @param actionStatus @NotNull
   * @param actionTime @NotNull
   */
  public AuditActionRequest(java.lang.String email, java.lang.String info, com.innowise.sivachenko.kafka.avro.AuditActionType actionType, com.innowise.sivachenko.kafka.avro.AuditServiceType serviceType, java.lang.Integer actionStatus, java.time.Instant actionTime) {
    this.email = email;
    this.info = info;
    this.actionType = actionType;
    this.serviceType = serviceType;
    this.actionStatus = actionStatus;
    this.actionTime = actionTime.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return email;
    case 1: return info;
    case 2: return actionType;
    case 3: return serviceType;
    case 4: return actionStatus;
    case 5: return actionTime;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: email = value$ != null ? value$.toString() : null; break;
    case 1: info = value$ != null ? value$.toString() : null; break;
    case 2: actionType = (com.innowise.sivachenko.kafka.avro.AuditActionType)value$; break;
    case 3: serviceType = (com.innowise.sivachenko.kafka.avro.AuditServiceType)value$; break;
    case 4: actionStatus = (java.lang.Integer)value$; break;
    case 5: actionTime = (java.time.Instant)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'email' field.
   * @return @Email
   */
  public java.lang.String getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @Email
   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'info' field.
   * @return @NotBlank
   */
  public java.lang.String getInfo() {
    return info;
  }


  /**
   * Sets the value of the 'info' field.
   * @NotBlank
   * @param value the value to set.
   */
  public void setInfo(java.lang.String value) {
    this.info = value;
  }

  /**
   * Gets the value of the 'actionType' field.
   * @return @NotBlank
   */
  public com.innowise.sivachenko.kafka.avro.AuditActionType getActionType() {
    return actionType;
  }


  /**
   * Sets the value of the 'actionType' field.
   * @NotBlank
   * @param value the value to set.
   */
  public void setActionType(com.innowise.sivachenko.kafka.avro.AuditActionType value) {
    this.actionType = value;
  }

  /**
   * Gets the value of the 'serviceType' field.
   * @return @NotBlank
   */
  public com.innowise.sivachenko.kafka.avro.AuditServiceType getServiceType() {
    return serviceType;
  }


  /**
   * Sets the value of the 'serviceType' field.
   * @NotBlank
   * @param value the value to set.
   */
  public void setServiceType(com.innowise.sivachenko.kafka.avro.AuditServiceType value) {
    this.serviceType = value;
  }

  /**
   * Gets the value of the 'actionStatus' field.
   * @return @NotNull
   */
  public int getActionStatus() {
    return actionStatus;
  }


  /**
   * Sets the value of the 'actionStatus' field.
   * @NotNull
   * @param value the value to set.
   */
  public void setActionStatus(int value) {
    this.actionStatus = value;
  }

  /**
   * Gets the value of the 'actionTime' field.
   * @return @NotNull
   */
  public java.time.Instant getActionTime() {
    return actionTime;
  }


  /**
   * Sets the value of the 'actionTime' field.
   * @NotNull
   * @param value the value to set.
   */
  public void setActionTime(java.time.Instant value) {
    this.actionTime = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Creates a new AuditActionRequest RecordBuilder.
   * @return A new AuditActionRequest RecordBuilder
   */
  public static com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder newBuilder() {
    return new com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder();
  }

  /**
   * Creates a new AuditActionRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AuditActionRequest RecordBuilder
   */
  public static com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder newBuilder(com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder other) {
    if (other == null) {
      return new com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder();
    } else {
      return new com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder(other);
    }
  }

  /**
   * Creates a new AuditActionRequest RecordBuilder by copying an existing AuditActionRequest instance.
   * @param other The existing instance to copy.
   * @return A new AuditActionRequest RecordBuilder
   */
  public static com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder newBuilder(com.innowise.sivachenko.kafka.avro.AuditActionRequest other) {
    if (other == null) {
      return new com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder();
    } else {
      return new com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder(other);
    }
  }

  /**
   * RecordBuilder for AuditActionRequest instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AuditActionRequest>
    implements org.apache.avro.data.RecordBuilder<AuditActionRequest> {

    /** @Email */
    private java.lang.String email;
    /** @NotBlank */
    private java.lang.String info;
    /** @NotBlank */
    private com.innowise.sivachenko.kafka.avro.AuditActionType actionType;
    /** @NotBlank */
    private com.innowise.sivachenko.kafka.avro.AuditServiceType serviceType;
    /** @NotNull */
    private int actionStatus;
    /** @NotNull */
    private java.time.Instant actionTime;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.email)) {
        this.email = data().deepCopy(fields()[0].schema(), other.email);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.info)) {
        this.info = data().deepCopy(fields()[1].schema(), other.info);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.actionType)) {
        this.actionType = data().deepCopy(fields()[2].schema(), other.actionType);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.serviceType)) {
        this.serviceType = data().deepCopy(fields()[3].schema(), other.serviceType);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.actionStatus)) {
        this.actionStatus = data().deepCopy(fields()[4].schema(), other.actionStatus);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.actionTime)) {
        this.actionTime = data().deepCopy(fields()[5].schema(), other.actionTime);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing AuditActionRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(com.innowise.sivachenko.kafka.avro.AuditActionRequest other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.email)) {
        this.email = data().deepCopy(fields()[0].schema(), other.email);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.info)) {
        this.info = data().deepCopy(fields()[1].schema(), other.info);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.actionType)) {
        this.actionType = data().deepCopy(fields()[2].schema(), other.actionType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.serviceType)) {
        this.serviceType = data().deepCopy(fields()[3].schema(), other.serviceType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.actionStatus)) {
        this.actionStatus = data().deepCopy(fields()[4].schema(), other.actionStatus);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.actionTime)) {
        this.actionTime = data().deepCopy(fields()[5].schema(), other.actionTime);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'email' field.
      * @Email
      * @return The value.
      */
    public java.lang.String getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @Email
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder setEmail(java.lang.String value) {
      validate(fields()[0], value);
      this.email = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @Email
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'email' field.
      * @Email
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder clearEmail() {
      email = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'info' field.
      * @NotBlank
      * @return The value.
      */
    public java.lang.String getInfo() {
      return info;
    }


    /**
      * Sets the value of the 'info' field.
      * @NotBlank
      * @param value The value of 'info'.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder setInfo(java.lang.String value) {
      validate(fields()[1], value);
      this.info = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'info' field has been set.
      * @NotBlank
      * @return True if the 'info' field has been set, false otherwise.
      */
    public boolean hasInfo() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'info' field.
      * @NotBlank
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder clearInfo() {
      info = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'actionType' field.
      * @NotBlank
      * @return The value.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionType getActionType() {
      return actionType;
    }


    /**
      * Sets the value of the 'actionType' field.
      * @NotBlank
      * @param value The value of 'actionType'.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder setActionType(com.innowise.sivachenko.kafka.avro.AuditActionType value) {
      validate(fields()[2], value);
      this.actionType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'actionType' field has been set.
      * @NotBlank
      * @return True if the 'actionType' field has been set, false otherwise.
      */
    public boolean hasActionType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'actionType' field.
      * @NotBlank
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder clearActionType() {
      actionType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'serviceType' field.
      * @NotBlank
      * @return The value.
      */
    public com.innowise.sivachenko.kafka.avro.AuditServiceType getServiceType() {
      return serviceType;
    }


    /**
      * Sets the value of the 'serviceType' field.
      * @NotBlank
      * @param value The value of 'serviceType'.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder setServiceType(com.innowise.sivachenko.kafka.avro.AuditServiceType value) {
      validate(fields()[3], value);
      this.serviceType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'serviceType' field has been set.
      * @NotBlank
      * @return True if the 'serviceType' field has been set, false otherwise.
      */
    public boolean hasServiceType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'serviceType' field.
      * @NotBlank
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder clearServiceType() {
      serviceType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'actionStatus' field.
      * @NotNull
      * @return The value.
      */
    public int getActionStatus() {
      return actionStatus;
    }


    /**
      * Sets the value of the 'actionStatus' field.
      * @NotNull
      * @param value The value of 'actionStatus'.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder setActionStatus(int value) {
      validate(fields()[4], value);
      this.actionStatus = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'actionStatus' field has been set.
      * @NotNull
      * @return True if the 'actionStatus' field has been set, false otherwise.
      */
    public boolean hasActionStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'actionStatus' field.
      * @NotNull
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder clearActionStatus() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'actionTime' field.
      * @NotNull
      * @return The value.
      */
    public java.time.Instant getActionTime() {
      return actionTime;
    }


    /**
      * Sets the value of the 'actionTime' field.
      * @NotNull
      * @param value The value of 'actionTime'.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder setActionTime(java.time.Instant value) {
      validate(fields()[5], value);
      this.actionTime = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'actionTime' field has been set.
      * @NotNull
      * @return True if the 'actionTime' field has been set, false otherwise.
      */
    public boolean hasActionTime() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'actionTime' field.
      * @NotNull
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.AuditActionRequest.Builder clearActionTime() {
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AuditActionRequest build() {
      try {
        AuditActionRequest record = new AuditActionRequest();
        record.email = fieldSetFlags()[0] ? this.email : (java.lang.String) defaultValue(fields()[0]);
        record.info = fieldSetFlags()[1] ? this.info : (java.lang.String) defaultValue(fields()[1]);
        record.actionType = fieldSetFlags()[2] ? this.actionType : (com.innowise.sivachenko.kafka.avro.AuditActionType) defaultValue(fields()[2]);
        record.serviceType = fieldSetFlags()[3] ? this.serviceType : (com.innowise.sivachenko.kafka.avro.AuditServiceType) defaultValue(fields()[3]);
        record.actionStatus = fieldSetFlags()[4] ? this.actionStatus : (java.lang.Integer) defaultValue(fields()[4]);
        record.actionTime = fieldSetFlags()[5] ? this.actionTime : (java.time.Instant) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AuditActionRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<AuditActionRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AuditActionRequest>
    READER$ = (org.apache.avro.io.DatumReader<AuditActionRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










